---
import type { Product } from "../../types/Product";
import type { User } from "../../types/User";
import ProductBasket from "./ProductBasket.astro";
import ProductDelete from "./ProductDelete.astro";
import ProductEdit from "./ProductEdit.astro";

export interface Props {
    myData: User,
    data: Product
}

const productData = Astro.props.data;
const { myData } = Astro.props;
---

<div id="product" class="col-lg-4">
    <label for="product-title">Title</label>
    <div class="d-flex flex-center bg-secondary fs-2x ">
        <p id={`product-title-${productData.id}`}>
            {productData.attributes.Title}
        </p>
    </div>

    <label for="product-price" class="mt-5">Price</label>
    <div class="d-flex flex-center bg-secondary fs-2x">
        <p id={`product-price-${productData.id}`}>
            {productData.attributes.Price}
        </p>
        <p>&nbsp;$</p>
    </div>

    <div class="d-flex flex-column flex-center">
        <div class="d-flex flex-column w-100 form-control mt-2">
            <p>Main zone</p>
            <ProductBasket myData={myData}></ProductBasket>
        </div>
        <div class="d-flex flex-column w-100 form-control mt-2">
            <p>Edit zone</p>
            <ProductEdit></ProductEdit>
            <ProductDelete></ProductDelete>
        </div>
    </div>

</div>

<script>
    import type { Product } from "../../types/Product";
	import { getCardObject } from "../../utils/jsonResponse";
	import { addListener } from "../../utils/socket.io";

    addListener("productsChanged", async (data: Product) => {
        const titleP= document.getElementById(`product-title-${data.id}`) as HTMLParagraphElement;
        const priceP = document.getElementById(`product-price-${data.id}`) as HTMLParagraphElement;

		const cardProps = getCardObject(data);

        titleP.textContent = cardProps.title;
        priceP.textContent = cardProps.price;
    })
</script>
